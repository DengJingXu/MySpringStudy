<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">


    <!--spring中的依赖注入DI(dependency injection)
           IOC的作用：降低程序间的耦合（依赖关系）
           依赖关系的管理：都交给了spring维护
           在当前类需要用到其他类的对象，由spring为我们提供，我们只需要在配置文件中说明
           依赖关系的维护：称之为依赖注入
           依赖注入：
                能注入的s数据：有三类
                        基本类型和String
                        其他bean类型（在配置文件中或注解配置过的bean）
                        复杂类型/集合类型
                注入的方式：有三种
                         第一种：使用构造函数提供
                         第二种：使用set方法提供
                         第三种：使用注解
    -->
    <!--构造函数注入：
           使用标签：constructor-arg
           标签出现位置：bean标签内部
           标签中的属性：
                    type: 用于指定要注入的数据类型，该数据类型也是构造函数中某个或某些参数的类型
                    index: 用于指定要注入的数据给构造函数中指定索引位置的参数赋值，索引位置从0开始
                    name: 用于指定给构造函数中指定名称的参数赋值  (常用)
                    ====上面三个都是指定给构造参数中哪个参数赋值
                    value: 用于提供基本类型和String类型的数据
                    ref: 用于指定其他的bean类型数据，它指的是在spring容器中存在的bean
           优势：
                在获取bean对象时，注入数据是必须操作，否则无法创建bean对象(无法初始化bean对象到spring容器中)
            缺点：
                改变了bean对象的实例化方式，使我们在创建对象时，即使用不到这些数据，也必须提供
     -->
    <!--<bean id="saveAccount" class="com.dengjingxu.service.impl.SaveAccountImpl">
        <constructor-arg name="name" value="小桂子" ></constructor-arg>
        <constructor-arg name="age" value="22"></constructor-arg>
        <constructor-arg name="date" ref="now"></constructor-arg>
    </bean>-->
    <bean id="now" class="java.util.Date"></bean>

    <!--set方法注入:
         涉及的标签：property
         出现的位置：bean标签的内部
         标签的属性：
                name： 用于指定注入时调用的set方法名称
                value：用于提供基本数据类型和String类型的数据
                ref：用于指定其他的bean类型数据，它指的是在spring容器中存在的bean

     -->
    <bean id="saveAccount" class="com.dengjingxu.service.impl.SaveAccountImpl">
        <property name="name" value="小桂子"></property>
        <property name="age" value="22"></property>
        <property name="date" ref="now"></property>
    </bean>
</beans>